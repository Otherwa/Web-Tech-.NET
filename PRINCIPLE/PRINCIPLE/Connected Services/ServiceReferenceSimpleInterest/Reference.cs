//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PRINCIPLE.ServiceReferenceSimpleInterest {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://simpleinterest.org/", ConfigurationName="ServiceReferenceSimpleInterest.SimpleInterestSoap")]
    public interface SimpleInterestSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://simpleinterest.org/CalculateInterest", ReplyAction="*")]
        float CalculateInterest(float principle, float amount, int time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://simpleinterest.org/CalculateInterest", ReplyAction="*")]
        System.Threading.Tasks.Task<float> CalculateInterestAsync(float principle, float amount, int time);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SimpleInterestSoapChannel : PRINCIPLE.ServiceReferenceSimpleInterest.SimpleInterestSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleInterestSoapClient : System.ServiceModel.ClientBase<PRINCIPLE.ServiceReferenceSimpleInterest.SimpleInterestSoap>, PRINCIPLE.ServiceReferenceSimpleInterest.SimpleInterestSoap {
        
        public SimpleInterestSoapClient() {
        }
        
        public SimpleInterestSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimpleInterestSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleInterestSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleInterestSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public float CalculateInterest(float principle, float amount, int time) {
            return base.Channel.CalculateInterest(principle, amount, time);
        }
        
        public System.Threading.Tasks.Task<float> CalculateInterestAsync(float principle, float amount, int time) {
            return base.Channel.CalculateInterestAsync(principle, amount, time);
        }
    }
}
